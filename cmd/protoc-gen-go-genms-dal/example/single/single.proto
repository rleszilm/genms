syntax = "proto3";

package greeter;
option go_package = "github.com/rleszilm/genms/cmd/protoc-gen-go-genms-dal/example/single";

import "google/type/latlng.proto";
import "protoc-gen-go-genms-dal/annotations/annotations.proto";
import "protoc-gen-go-genms-dal/annotations/types/types.proto";

message Single {
    int32 scalar_int32 = 1;
    int64 scalar_int64 = 2;
    float scalar_float32 = 3;
    double scalar_float64 = 4;
    string scalar_string = 5;
    bytes scalar_bytes = 6;
    bool scalar_bool = 7;
    repeated bool many_scalar_bool = 8;
    
    enum Enum {
        EnumOne = 0;
        EnumTwo = 1;
    }
    Enum scalar_enum = 9;

    message Message {
        int32 id = 1;
    }
    Message obj_message = 10;
    repeated Message many_obj_message = 11;
    
    string ignored = 12 [(genms.dal.field_options).ignore = true];
    string renamed = 13 [(genms.dal.field_options).name = "aliased"];

    string ignored_postgres = 14 [(genms.dal.field_options).postgres.ignore = true];
    string renamed_postgres = 15 [(genms.dal.field_options).postgres.name = "aliased_postgres"];
    
    string ignored_rest = 16 [(genms.dal.field_options).rest.ignore = true];
    string renamed_rest = 17 [(genms.dal.field_options).rest.name = "aliased_rest"];

    string ignored_mongo = 18 [(genms.dal.field_options).mongo.ignore = true];
    string renamed_mongo = 19 [(genms.dal.field_options).mongo.name = "aliased_mongo"];

    string bson_string_oid = 20 [
        (genms.dal.field_options).mongo.name = "_id",
        (genms.dal.field_options).mongo.bson = ObjectID
    ];
    bytes bson_bytes_oid = 21 [
        (genms.dal.field_options).mongo.bson = ObjectID
    ];

    optional int32 scalar_int32_opt = 22;
    optional int64 scalar_int64_opt = 23;
    optional float scalar_float32_opt = 24;
    optional double scalar_float64_opt = 25;
    optional string scalar_string_opt = 26;
    optional bytes scalar_bytes_opt = 27;
    optional bool scalar_bool_opt = 28;
    
    optional Enum scalar_enum_opt = 29;

    optional Message obj_message_opt = 30;
    
    optional string ignored_opt = 31 [(genms.dal.field_options).ignore = true];
    optional string renamed_opt = 32 [(genms.dal.field_options).name = "aliased_opt"];

    optional string ignored_postgres_opt = 33 [(genms.dal.field_options).postgres.ignore = true];
    optional string renamed_postgres_opt = 34 [(genms.dal.field_options).postgres.name = "aliased_postgres_opt"];
    
    optional string ignored_rest_opt = 35 [(genms.dal.field_options).rest.ignore = true];
    optional string renamed_rest_opt = 36 [(genms.dal.field_options).rest.name = "aliased_rest_opt"];

    optional string ignored_mongo_opt = 37 [(genms.dal.field_options).mongo.ignore = true];
    optional string renamed_mongo_opt = 38 [(genms.dal.field_options).mongo.name = "aliased_mongo_opt"];

    optional string bson_string_oid_opt = 39 [
        (genms.dal.field_options).mongo.name = "_id_opt",
        (genms.dal.field_options).mongo.bson = ObjectID
    ];
    optional bytes bson_bytes_oid_opt = 40 [
        (genms.dal.field_options).mongo.bson = ObjectID
    ];

    option (genms.dal.message_options) = {
        queries: [
            {
                name: "by id"
                args: [{name: "bson_string_oid"}]
            },
            {
                name: "one param"
                args: [{name: "scalar_int32"}]
            },
            {
                name: "multiple param"
                args: [
                    {name: "scalar_int32"},
                    {name: "scalar_int64"},
                    {name: "scalar_float32"}
                ]
            },
            {
                name: "message param"
                args: [{name: "obj_message"}]
            },
            {
                name: "with comparator"
                args: [{name: "scalar_int32", comparison: GT}]
            },
            {
                name: "with rest"
                args: [
                    {
                        name: "scalar_int32",
                        rest: {
                            name: "query_rest_scalar_int32"
                            location: Query
                        }
                    },
                    {
                        name: "scalar_int64",
                        rest: {location: Path}
                    },
                    {
                        name: "scalar_float32",
                        rest: {location: Body}
                    },
                    {
                        name: "scalar_float64",
                        rest: {location: Header}
                    }
                ]
                rest: {
                    method: POST
                }
            },
            {
                name: "provider stub only"
                mode: ProviderStub
            },
            {
                name: "interface stub only"
                mode: InterfaceStub
            },
            {
                name: "non field only"
                args: [
                    {name: "kind" kind: "string" rest: {location: Path}}
                ]
            }
        ]
        backends: [Postgres, Rest, Mongo]
    };
}
